type DocTree {
  id: ID!
  key: ID!
  title: String!
  children: [DocTree]
  doc: Doc
  parentId: ID
  isFolder: Boolean
  identifier: String
}

type FolderView {
  id: ID!
  name: String!
}

type NewResource {
  id: ID!
  identifier: String
  title: String
}

type CurrentFolderAndPath {
  path: PathMap
  currentFolder: DocTree
  newResource: NewResource
}

type PathMap {
  pathNames: [String!]!
  pathIds: [ID!]!
}

extend type Query {
  getDocTree(folderId: ID): String!
  getSharedDocTree: [DocTree]
  getResource(id: ID!): DocTree
  getParentFolderByIdentifier(identifier: String!): DocTree
  openFolder(id: ID!, idType: String): CurrentFolderAndPath
  openRootFolder: CurrentFolderAndPath
}

extend type Mutation {
  addResource(
    id: ID
    isFolder: Boolean!
    identifier: String
  ): CurrentFolderAndPath!
  deleteResource(id: ID!): CurrentFolderAndPath!
  renameResource(id: ID!, title: String!): CurrentFolderAndPath!
  moveResource(id: ID!, newParentId: ID): CurrentFolderAndPath!
  updateTreePosition(
    id: ID!
    newParentId: ID
    newPosition: Int!
  ): CurrentFolderAndPath!
}
