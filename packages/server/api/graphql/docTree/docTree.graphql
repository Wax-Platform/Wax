type DocTree {
  id: ID!
  key: ID!
  title: String!
  children: [DocTree!]
  bookComponent: BookComponent
  bookComponentId: ID
  parentId: ID
  isFolder: Boolean
}

type FolderView {
  id: ID!
  name: String!
}

extend type Query {
  getDocTree(folderId: ID): String!
  getSharedDocTree: [DocTree]
}

extend type Mutation {
  addResource(id: ID, bookId: ID, divisionId: ID, isFolder: Boolean!): DocTree!
  deleteResource(id: ID!): DocTree!
  renameResource(id: ID!, title: String!, lockRename: Boolean): DocTree
  updateTreePosition(id: ID!, newParentId: ID, newPosition: Int!): DocTree!
}
