type Template {
  id: ID!
  userId: ID
  docId: ID
  fileId: ID
  displayName: String!
  category: String!
  meta: String
  status: String!
  rawCss: String
  isForked: Boolean
  imageUrl: String
}

type Snippet {
  id: ID!
  classBody: String!
  className: String!
  displayName: String!
  description: String!
  meta: String!
}

extend type Query {
  getTemplate(id: ID!): Template
  getSystemTemplates: [Template]
  getUserTemplates: [Template]
  getDocumentTemplates: [Template]
  getUserSnippets: [Snippet]
}

extend type Mutation {
  checkIfUserTemplatesExist: Boolean!
  updateTemplateCss(id: ID, rawCss: String, displayName: String): ID
  deleteTemplate(id: ID): ID
  fetchAndCreateTemplateFromUrl(url: String): Boolean!
}
