type Resource {
  id: ID!
  key: ID!
  title: String!
  children: [Resource]
  doc: Doc
  parentId: ID
  resourceType: String
  templateId: ID
  extension: String
  identifier: String
  img: ResourceImage
}

type ResourceImage {
  alt: String
  key: String
  small: String
  medium: String
  full: String
  normal: String
}

type NewResource {
  id: ID!
  identifier: String
  title: String
  parentId: ID!
}

type CurrentFolderAndPath {
  path: [PathMap]
  currentFolder: Resource
  requestAccessTo: String
}

type PathMap {
  title: String!
  id: ID!
}

type FolderIdResponse {
  folderId: ID!
}

extend type Query {
  openFolder(
    id: ID
    resourceType: String
    sysFolder: String
  ): CurrentFolderAndPath
  getDocPath(id: ID!): [ID]
  getSharedWith: [User]
}

extend type Mutation {
  addResource(
    id: ID
    resourceType: String!
    identifier: String
    extension: String
    title: String
    templateProps: String # JSON string of template props
    base64: String
  ): NewResource!
  deleteResource(id: ID!): FolderIdResponse!
  renameResource(id: ID!, title: String!): FolderIdResponse!
  moveResource(id: ID!, newParentId: ID): FolderIdResponse!
  shareResource(resourceId: ID!, inviteeEmail: String!): Boolean!
  unshareResource(resourceId: ID!, userId: ID!): Boolean!
  addToFavorites(resourceId: ID!): Resource
  pasteResources(parentId: ID!, resourceIds: [ID!]!, action: String!): Boolean!
  reorderChildren(parentId: ID!, newChildrenIds: [ID!]!): Boolean!
}
