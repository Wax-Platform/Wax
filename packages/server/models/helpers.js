const schema = {
  array: {
    type: 'array',
  },
  arrayOfIds: {
    type: 'array',
    items: {
      type: 'string',
      format: 'uuid',
    },
    default: [],
  },
  arrayOfStrings: {
    type: 'array',
    items: {
      type: 'string',
    },
  },
  arrayOfStringsNotEmpty: {
    type: 'array',
    items: {
      type: 'string',
      minLength: 1,
    },
  },
  boolean: {
    type: 'boolean',
  },
  booleanDefaultFalse: {
    type: 'boolean',
    default: false,
  },
  booleanDefaultTrue: {
    type: 'boolean',
    default: true,
  },
  /*
    This will accept a js Date object, as well as a Date.toISOString() string.
    If the object is not valid, it will fail at the DATE type in the migration.

    TO DO
    Figure out if there is a way to make the wrong object fail
    on validation time.
  */
  date: {
    type: ['string', 'object'],
    // format: 'date-time',
    format: 'date',
  },
  timestamp: { type: 'integer' },
  dateOrNull: {
    type: ['string', 'object', 'null'],
    format: 'date-time',
    // format: 'date',
  },
  email: {
    type: 'string',
    format: 'email',
  },
  foreignType: {
    type: 'string',
    enum: [
      'book',
      'bookCollection',
      'bookCollectionTranslation',
      'bookComponent',
      'bookComponentState',
      'bookComponentTranslation',
      'bookTranslation',
      'contributor',
      'division',
      'file',
      'language',
      'lock',
      'sponsor',
      'template',
    ],
  },
  id: {
    type: ['string', 'null'],
    format: 'uuid',
  },
  integerPositive: {
    type: 'integer',
    exclusiveMinimum: 0,
  },
  targetType: {
    type: 'string',
    enum: ['epub', 'pagedjs', 'vivliostyle', 'web'],
  },
  notesType: { type: 'string', enum: ['footnotes', 'endnotes', 'chapterEnd'] },
  language: {
    // regexp: {
    //   pattern: langIsoRegex,
    //   flags: 'i',
    // },
    type: 'string',
    // pattern: langIsoRegex,
    enum: [
      'aa',
      'ab',
      'ae',
      'af',
      'ak',
      'am',
      'an',
      'ar',
      'as',
      'av',
      'ay',
      'az',
      'ba',
      'be',
      'bg',
      'bh',
      'bi',
      'bm',
      'bn',
      'bo',
      'br',
      'bs',
      'ca',
      'ce',
      'ch',
      'co',
      'cr',
      'cs',
      'cu',
      'cv',
      'cy',
      'da',
      'de',
      'dv',
      'dz',
      'ee',
      'el',
      'en',
      'eo',
      'es',
      'et',
      'eu',
      'fa',
      'ff',
      'fi',
      'fj',
      'fo',
      'fr',
      'fy',
      'ga',
      'gd',
      'gl',
      'gn',
      'gu',
      'gv',
      'ha',
      'he',
      'hi',
      'ho',
      'hr',
      'ht',
      'hu',
      'hy',
      'hz',
      'ia',
      'id',
      'ie',
      'ig',
      'ii',
      'ik',
      'io',
      'is',
      'it',
      'iu',
      'ja',
      'jv',
      'ka',
      'kg',
      'ki',
      'kj',
      'kk',
      'kl',
      'km',
      'kn',
      'ko',
      'kr',
      'ks',
      'ku',
      'kv',
      'kw',
      'ky',
      'la',
      'lb',
      'lg',
      'li',
      'ln',
      'lo',
      'lt',
      'lu',
      'lv',
      'mg',
      'mh',
      'mi',
      'mk',
      'ml',
      'mn',
      'mr',
      'ms',
      'mt',
      'my',
      'na',
      'nb',
      'nd',
      'ne',
      'ng',
      'nl',
      'nn',
      'no',
      'nr',
      'nv',
      'ny',
      'oc',
      'oj',
      'om',
      'or',
      'os',
      'pa',
      'pi',
      'pl',
      'ps',
      'pt',
      'qu',
      'rm',
      'rn',
      'ro',
      'ru',
      'rw',
      'sa',
      'sc',
      'sd',
      'se',
      'sg',
      'si',
      'sk',
      'sl',
      'sm',
      'sn',
      'so',
      'sq',
      'sr',
      'ss',
      'st',
      'su',
      'sv',
      'sw',
      'ta',
      'te',
      'tg',
      'th',
      'ti',
      'tk',
      'tl',
      'tn',
      'to',
      'tr',
      'ts',
      'tt',
      'tw',
      'ty',
      'ug',
      'uk',
      'ur',
      'uz',
      've',
      'vi',
      'vo',
      'wa',
      'wo',
      'xh',
      'yi',
      'yo',
      'za',
      'zh',
      'zu',
    ],
  },
  mimetype: {
    type: 'string',
    pattern:
      '^(application|audio|font|image|model|multipart|text|video)/[a-z0-9]+([-+.][a-z0-9]+)*$',
    // if you want to know why this is default, look at
    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types
    default: 'application/octet-stream',
  },
  object: {
    type: 'object',
  },
  string: {
    type: ['string', 'null'],
  },
  stringNotEmpty: {
    type: 'string',
    minLength: 1,
  },
  uri: {
    type: 'string',
    format: 'uri-reference',
  },
  year: {
    type: 'integer',
    minimum: 1900,
    maximum: 2099,
  },
}

module.exports = {
  schema,
}
