FROM node:18.19.0-alpine3.19

RUN apk add --no-cache git make g++

WORKDIR /home/node/client

COPY package.json .
COPY yarn.lock .


RUN yarn cache clean
RUN yarn install --frozen-lockfile --production=true

COPY app app
COPY static static

ARG server_url
ARG websocket_server_url
ARG pandoc_url
ENV SERVER_URL=$server_url
ENV WEBSOCKET_SERVER_URL=$websocket_server_url

ENV NODE_ENV='production'
ENV CLIENT_PAGE_TITLE='Wax'
ENV CLIENT_FAVICON_PATH='../static/wax.ico'
ENV CLIENT_LANGUAGE='en-US'
ENV CLIENT_FEATURE_UPLOAD_DOCX_FILES='true'
ENV CLIENT_FEATURE_BOOK_STRUCTURE='false'
ENV CLIENT_PANDOC_URL=$pandoc_url

RUN yarn coko-client-build

############################################################################

FROM node:18.19.0-alpine3.19

RUN npm install --global serve

WORKDIR /home/node/client

COPY --from=0 /home/node/client/_build ./_build
COPY --from=0 /home/node/client/node_modules/@coko/client/scripts/env.sh ./env.sh

RUN chown -R node:node .
USER node

ENTRYPOINT ["sh", "./env.sh"]
CMD ["npx", "serve", "-p", "8080", "--single", "./_build"]
