services:
  client:
    restart: unless-stopped
    build:
      context: ./packages/client
      dockerfile: Dockerfile-development
    command: ['node_modules/.bin/coko-client-dev-js']
    ports:
      - ${CLIENT_PORT:-4000}:${CLIENT_PORT:-4000}
    environment:
      - NODE_ENV=development
      - CLIENT_PORT=${CLIENT_PORT:-4000}
      - CLIENT_FAST_REFRESH=1
      - CLIENT_PAGE_TITLE=${CLIENT_PAGE_TITLE:-wax}
      - CLIENT_LANGUAGE=${CLIENT_LANGUAGE:-"en-US"}
      - CLIENT_FEATURE_UPLOAD_DOCX_FILES=true
      - CLIENT_FEATURE_BOOK_STRUCTURE=false
      - SERVER_URL=${SERVER_URL:-http://localhost:3000}
      - WEBSOCKET_SERVER_URL=${WEBSOCKET_SERVER_URL:-ws://localhost:3333}
      # - CLIENT_WS_MIN_TIMEOUT=3000
      # - CLIENT_WS_TIMEOUT=30000
      - CLIENT_FAVICON_PATH=${CLIENT_FAVICON_PATH:-../static/wax.ico}
    volumes:
      - ./packages/client/app:/home/node/client/app
    tty: true

  server:
    restart: unless-stopped
    build:
      context: ./packages/server
      dockerfile: Dockerfile-development
    depends_on:
      - db
      - s3
      - createbucket
      - pagedjs
      - xsweet
    command: ['yarn', 'coko-server', 'start-dev']
    ports:
      - ${SERVER_PORT:-3000}:${SERVER_PORT:-3000}
      - ${WS_SERVER_PORT:-3333}:${WS_SERVER_PORT:-3333}
    environment:
      - NODE_ENV=development
      - WAX_FLAVOUR=VANILLA
      - SECRET=${SECRET:-dev_secret}
      - SERVER_URL=${SERVER_URL:-http://server:3000}
      - WEBSOCKET_SERVER_URL=${WEBSOCKET_SERVER_URL:-ws://server:${WS_SERVER_PORT:-3333}}
      - CLIENT_URL=${CLIENT_URL:-http://localhost:4000}
      - SERVER_SERVE_CLIENT=false
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-wax_dev}
      - POSTGRES_USER=${POSTGRES_USER:-dev_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_user_password}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-password}
      - ADMIN_GIVEN_NAME=${ADMIN_GIVEN_NAME:-Admin}
      - ADMIN_SURNAME=${ADMIN_SURNAME:-Adminius}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}
      - SERVER_PORT=${SERVER_PORT:-3000}
      - WS_SERVER_PORT=${WS_SERVER_PORT:-3333}
      - WS_HEARTBEAT_INTERVAL=${WS_HEARTBEAT_INTERVAL:-3000}
      - FAIL_SAFE_UNLOCKING_INTERVAL=${FAIL_SAFE_UNLOCKING_INTERVAL:-12000}
      - MAILER_USER=${MAILER_USER}
      - MAILER_PASSWORD=${MAILER_PASSWORD}
      - MAILER_SENDER=${MAILER_SENDER:-dev@example.com}
      - MAILER_HOSTNAME=${MAILER_HOSTNAME}
      - S3_URL=${S3_URL:-http://s3:9000}
      - S3_ACCESS_KEY_ID_USER=${S3_ACCESS_KEY_ID_USER:-wax}
      - S3_SECRET_ACCESS_KEY_USER=${S3_SECRET_ACCESS_KEY_USER:-superSecretUserPassword}
      - S3_BUCKET=${S3_BUCKET:-uploads}
      # FOR THE CASE OF GCP
      # - S3_SEPARATE_DELETE_OPERATIONS=true
      # - S3_FORCE_PATH_STYLE=false
      # - SERVICE_EPUB_CHECKER_CLIENT_ID=59a3392b-0c4f-4318-bbe2-f86eff6d3de4
      # - SERVICE_EPUB_CHECKER_SECRET=asldkjLKJLaslkdf897kjhKUJH
      # - SERVICE_EPUB_CHECKER_URL=${SERVICE_EPUB_CHECKER_URL:-http://epubchecker:3001}
      - SERVICE_PAGEDJS_CLIENT_ID=59a3392b-0c4f-4318-bbe2-f86eff6d3de4
      - SERVICE_PAGEDJS_SECRET=asldkjLKJLaslkdf897kjhKUJH
      - SERVICE_PAGEDJS_URL=${SERVICE_PAGEDJS_URL:-http://pagedjs:3003}
      - SERVICE_XSWEET_CLIENT_ID=59a3392b-0c4f-4318-bbe2-f86eff6d3de4
      - SERVICE_XSWEET_SECRET=asldkjLKJLaslkdf897kjhKUJH
      - SERVICE_XSWEET_URL=${SERVICE_XSWEET_URL:-http://xsweet:3004}
      # - SERVICE_FLAX_CLIENT_ID=59a3392b-0c4f-4318-bbe2-f86eff6d3de4
      # - SERVICE_FLAX_SECRET=asldkjLKJLaslkdf897kjhKUJH
      # - SERVICE_FLAX_URL=${SERVICE_FLAX_URL:-http://flax:3005}
      - FEATURE_UPLOAD_DOCX_FILES=true
      - FEATURE_BOOK_STRUCTURE=false
      - FEATURE_POD=true
      # - AI_ENABLED=true
      # - CHAT_GPT_KEY=${CHAT_GPT_KEY}
      - TEMP_DIRECTORY_CRON_JOB_SCHEDULE=${TEMP_DIRECTORY_CRON_JOB_TIMING:-0 * * * *}
      - TEMP_DIRECTORY_CRON_JOB_OFFSET=${TEMP_DIRECTORY_CRON_JOB_OFFSET:-1800000}
      - TEMP_DIRECTORY_CLEAN_UP=${TEMP_DIRECTORY_CLEAN_UP:-true}
    volumes:
      - ./packages/server/api:/home/node/server/api
      - ./packages/server/config:/home/node/server/config
      - ./packages/server/controllers:/home/node/server/controllers
      - ./packages/server/models:/home/node/server/models
      - ./packages/server/scripts:/home/node/server/scripts
      - ./packages/server/services:/home/node/server/services
      - ./packages/server/utilities:/home/node/server/utilities
      - ./packages/server/startWebSocketServer.js:/home/node/server/startWebSocketServer.js
      - ./packages/server/config/local.js:/home/node/server/config/local.js

  # epubchecker:
  #   depends_on:
  #     - db-epubchecker
  #   image: cokoapps/epubchecker:2.0.2
  #   ports:
  #     - ${SERVICE_EPUB_CHECKER_PORT:-3001}:${SERVICE_EPUB_CHECKER_PORT:-3001}
  #   environment:
  #     - NODE_ENV=development
  #     - SECRET=epubchecker_dev_secret
  #     - SERVER_PORT=${SERVICE_EPUB_CHECKER_PORT:-3001}
  #     - POSTGRES_HOST=db-epubchecker
  #     - POSTGRES_PORT=5432
  #     - POSTGRES_DB=epubchecker_dev
  #     - POSTGRES_USER=epubchecker_user_dev
  #     - POSTGRES_PASSWORD=epubchecker_user_password
  #     - CLIENT_ID=59a3392b-0c4f-4318-bbe2-f86eff6d3de4
  #     - CLIENT_SECRET=asldkjLKJLaslkdf897kjhKUJH

  pagedjs:
    depends_on:
      - db-pagedjs
    image: cokoapps/pagedjs:2.0.6
    ports:
      - ${SERVICE_PAGEDJS_PORT:-3003}:${SERVICE_PAGEDJS_PORT:-3003}
    environment:
      - NODE_ENV=development
      - SECRET=pagedjs_dev_secret
      - SERVER_PORT=${SERVICE_PAGEDJS_PORT:-3003}
      - SERVER_URL=${PAGEDJS_PUBLIC_URL:-http://localhost:3003}
      - POSTGRES_HOST=db-pagedjs
      - POSTGRES_PORT=5432
      - POSTGRES_DB=pagedjs_dev
      - POSTGRES_USER=pagedjs_user_dev
      - POSTGRES_PASSWORD=pagedjs_user_password
      - CLIENT_ID=59a3392b-0c4f-4318-bbe2-f86eff6d3de4
      - CLIENT_SECRET=asldkjLKJLaslkdf897kjhKUJH
    security_opt:
      - seccomp:unconfined

  xsweet:
    depends_on:
      - db-xsweet
    image: cokoapps/xsweet:3.0.2
    ports:
      - ${SERVICE_XSWEET_PORT:-3004}:${SERVICE_XSWEET_PORT:-3004}
    environment:
      - NODE_ENV=development
      - SECRET=xsweet_dev_secret
      - SERVER_PORT=${SERVICE_XSWEET_PORT:-3004}
      - POSTGRES_HOST=db-xsweet
      - POSTGRES_PORT=5432
      - POSTGRES_DB=xsweet_dev
      - POSTGRES_USER=xsweet_user_dev
      - POSTGRES_PASSWORD=xsweet_user_password
      - CLIENT_ID=59a3392b-0c4f-4318-bbe2-f86eff6d3de4
      - CLIENT_SECRET=asldkjLKJLaslkdf897kjhKUJH

  db:
    build:
      context: ./
      dockerfile: Dockerfile-pgvector
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-wax_dev}
      - POSTGRES_USER=${POSTGRES_USER:-dev_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_user_password}

  # db-epubchecker:
  #   image: postgres:16-alpine
  #   environment:
  #     - POSTGRES_DB=epubchecker_dev
  #     - POSTGRES_USER=epubchecker_user_dev
  #     - POSTGRES_PASSWORD=epubchecker_user_password

  db-pagedjs:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=pagedjs_dev
      - POSTGRES_USER=pagedjs_user_dev
      - POSTGRES_PASSWORD=pagedjs_user_password

  db-xsweet:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=xsweet_dev
      - POSTGRES_USER=xsweet_user_dev
      - POSTGRES_PASSWORD=xsweet_user_password

  s3:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    ports:
      - ${S3_PORT:-9000}:9000
      - ${MINIO_CONSOLE_PORT:-9001}:9001
    volumes:
      - minio_storage:/data
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY_ID_ADMIN:-admin}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_ACCESS_KEY_ADMIN:-superSecretAdminPassword}
    command: server --console-address ":${MINIO_CONSOLE_PORT:-9001}" /data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 0.5s
      timeout: 20s
      retries: 30

  createbucket:
    image: minio/mc:RELEASE.2025-04-16T18-13-26Z
    depends_on:
      - s3
    entrypoint: >
      /bin/sh -c "
        /usr/bin/mc config host add wax ${S3_URL:-http://s3:9000} ${S3_ACCESS_KEY_ID_ADMIN:-admin} ${S3_SECRET_ACCESS_KEY_ADMIN:-superSecretAdminPassword};
        /usr/bin/mc admin user add wax/ ${S3_ACCESS_KEY_ID_USER:-wax} ${S3_SECRET_ACCESS_KEY_USER:-superSecretUserPassword};
        /usr/bin/mc admin user enable wax/ ${S3_ACCESS_KEY_ID_USER:-wax};
        /usr/bin/mc mb wax/${S3_BUCKET:-uploads};
        /usr/bin/mc admin policy attach wax readwrite --user ${S3_ACCESS_KEY_ID_USER:-wax};
        exit 0;
      "

volumes:
  minio_storage:
