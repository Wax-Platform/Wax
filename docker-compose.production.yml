version: '3'

services:
  client:
    build:
      context: ./packages/client
      dockerfile: Dockerfile-production
    entrypoint: ['sh', './env.sh']
    command: ['nginx', '-g', 'daemon off;']
    ports:
      - ${NGINX_PORT_TO_LOCAL:-4000}:80
    environment:
      - SERVER_URL=${SERVER_URL:-http://localhost:3000}
      - WEBSOCKET_SERVER_URL=${WEBSOCKET_SERVER_URL:-ws://localhost:3333}

  server:
    restart: unless-stopped
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - ${SERVER_PORT:-3000}:${SERVER_PORT:-3000}
      - ${WS_SERVER_PORT:-3333}:${WS_SERVER_PORT:-3333}
    environment:
      - NODE_ENV=production
      - WAX_FLAVOUR=${WAX_FLAVOUR}
      - PUBSWEET_SECRET=${PUBSWEET_SECRET}
      - SERVER_URL=${SERVER_URL}
      - WEBSOCKET_SERVER_URL=${WEBSOCKET_SERVER_URL}
      - CLIENT_URL=${CLIENT_URL}
      - SERVER_SERVE_CLIENT=false
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_GIVEN_NAME=${ADMIN_GIVEN_NAME}
      - ADMIN_SURNAME=${ADMIN_SURNAME}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - SERVER_PORT=${SERVER_PORT}
      - WS_SERVER_PORT=${WS_SERVER_PORT}
      - WS_HEARTBEAT_INTERVAL=${WS_HEARTBEAT_INTERVAL:-10000}
      - FAIL_SAFE_UNLOCKING_INTERVAL=${FAIL_SAFE_UNLOCKING_INTERVAL:-12000}
      - MAILER_USER=${MAILER_USER}
      - MAILER_PASSWORD=${MAILER_PASSWORD}
      - MAILER_SENDER=${MAILER_SENDER}
      - MAILER_HOSTNAME=${MAILER_HOSTNAME}
      - PASSWORD_RESET_PATH_TO_PAGE=/password-reset
      - S3_PROTOCOL=${S3_PROTOCOL}
      - S3_HOST=${S3_HOST}
      - S3_PORT=${S3_PORT}
      - S3_ACCESS_KEY_ID_USER=${S3_ACCESS_KEY_ID_USER}
      - S3_SECRET_ACCESS_KEY_USER=${S3_SECRET_ACCESS_KEY_USER}
      - S3_BUCKET=uploads
      # - SERVICE_EPUB_CHECKER_CLIENT_ID=${SERVICE_EPUB_CHECKER_CLIENT_ID}
      # - SERVICE_EPUB_CHECKER_SECRET=${SERVICE_EPUB_CHECKER_SECRET}
      # - SERVICE_EPUB_CHECKER_URL=${SERVICE_EPUB_CHECKER_URL}
      - SERVICE_ICML_CLIENT_ID=${SERVICE_ICML_CLIENT_ID}
      - SERVICE_ICML_SECRET=${SERVICE_ICML_SECRET}
      - SERVICE_ICML_URL=${SERVICE_ICML_URL}
      - SERVICE_PAGEDJS_CLIENT_ID=${SERVICE_PAGEDJS_CLIENT_ID}
      - SERVICE_PAGEDJS_SECRET=${SERVICE_PAGEDJS_SECRET}
      - SERVICE_PAGEDJS_URL=${SERVICE_PAGEDJS_URL}
      - SERVICE_XSWEET_CLIENT_ID=${SERVICE_XSWEET_CLIENT_ID}
      - SERVICE_XSWEET_SECRET=${SERVICE_XSWEET_SECRET}
      - SERVICE_XSWEET_URL=${SERVICE_XSWEET_URL}
      # - SERVICE_FLAX_CLIENT_ID=${SERVICE_FLAX_CLIENT_ID}
      # - SERVICE_FLAX_SECRET=${SERVICE_FLAX_SECRET}
      # - SERVICE_FLAX_URL=${SERVICE_FLAX_URL}
      - FEATURE_UPLOAD_DOCX_FILES=${FEATURE_UPLOAD_DOCX_FILES}
      - FEATURE_BOOK_STRUCTURE=${FEATURE_BOOK_STRUCTURE}
      - FEATURE_POD=${FEATURE_POD:-false}
      - AI_ENABLED=${AI_ENABLED:-false}
      - TEMP_DIRECTORY_CRON_JOB_SCHEDULE=${TEMP_DIRECTORY_CRON_JOB_SCHEDULE}
      - TEMP_DIRECTORY_CRON_JOB_OFFSET=${TEMP_DIRECTORY_CRON_JOB_OFFSET}
      - TEMP_DIRECTORY_CLEAN_UP=${TEMP_DIRECTORY_CLEAN_UP}

  db:
    build:
      context: .
      dockerfile: Dockerfile-pgvector
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-wax_dev}
      - POSTGRES_USER=${POSTGRES_USER:-wax_dev_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-wax_dev_user_password}

  filehosting:
    image: minio/minio
    ports:
      - ${S3_PORT:-9000}:9000
      - ${MINIO_CONSOLE_PORT:-9001}:9001
    volumes:
      - minio_storage:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-admin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-superSecretAdminPassword}
    command: server --console-address ":${MINIO_CONSOLE_PORT:-9001}" /data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3

  createbucket:
    image: minio/mc
    depends_on:
      filehosting:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
        /usr/bin/mc config host add cokoServer http://filehosting:${S3_PORT:-9000} ${MINIO_ROOT_USER:-admin} ${MINIO_ROOT_PASSWORD:-superSecretAdminPassword};
        /usr/bin/mc admin user add cokoServer/ ${S3_ACCESS_KEY_ID:-nonRootUser} ${S3_SECRET_ACCESS_KEY:-nonRootPassword};
        /usr/bin/mc admin user enable cokoServer/ ${S3_ACCESS_KEY_ID:-nonRootUser};
        /usr/bin/mc mb cokoServer/${S3_BUCKET:-uploads};
        /usr/bin/mc admin policy attach cokoServer/ readwrite --user ${S3_ACCESS_KEY_ID:-nonRootUser};
        exit 0;
      "

volumes:
  minio_storage:
